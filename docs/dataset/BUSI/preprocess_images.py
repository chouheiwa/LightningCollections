import argparse
import os
import re
import shutil

split_dic = {
    'all': {
        'benign': ['3', '7', '11', '17', '23', '31', '46', '63', '74', '75', '78', '79', '82', '85', '86', '91', '99',
                   '103', '108', '109', '110', '129', '130', '133', '137', '152', '153', '158', '159', '160', '162',
                   '164',
                   '169', '172', '177', '178', '182', '190', '194', '200', '203', '210', '215', '231', '234', '237',
                   '238',
                   '241', '243', '247', '255', '259', '261', '263', '267', '270', '272', '287', '292', '301', '304',
                   '305',
                   '306', '309', '322', '323', '334', '335', '345', '349', '354', '356', '362', '364', '365', '370',
                   '373',
                   '378', '380', '392', '395', '401', '403', '405', '414', '418', '420', '430', '433'],
        'normal': ['6', '8', '15', '16', '28', '32', '35', '42', '43', '51', '53', '68', '70', '77', '80', '96', '97',
                   '98',
                   '99', '109', '113', '121', '131'],
        'malignant': ['2', '14', '15', '16', '23', '35', '37', '38', '39', '55', '57', '59', '62', '66', '76', '86',
                      '101',
                      '105', '106', '108', '109', '118', '119', '124', '128', '131', '135', '137', '140', '144', '146',
                      '159', '160', '161', '166', '168', '171', '185', '187', '188', '199', '200', '203', '206']
    },
    'bad': {
        'benign': ['3', '7', '11', '17', '23', '31', '46', '63', '74', '75', '78', '79', '82', '85', '86', '91', '99',
                   '103', '108', '109', '110', '129', '130', '133', '137', '152', '153', '158', '159', '160', '162',
                   '164', '169', '172', '177', '178', '182', '190', '194', '200', '203', '210', '215', '231', '234',
                   '237', '238', '241', '243', '247', '255', '259', '261', '263', '267', '270', '272', '287', '292',
                   '301', '304', '305', '306', '309', '322', '323', '334', '335', '345', '349', '354', '356', '362',
                   '364', '365', '370', '373', '378', '380', '392', '395', '401', '403', '405', '414', '418', '420',
                   '430', '433'],
        'normal': [],
        'malignant': ['2', '14', '15', '16', '23', '35', '37', '38', '39', '55', '57', '59', '62', '66', '76', '86',
                      '101', '105', '106', '108', '109', '118', '119', '124', '128', '131', '135', '137', '140', '144',
                      '146', '159', '160', '161', '166', '168', '171', '185', '187', '188', '199', '200', '203', '206']
    },
    'benign': {
        'benign': ['3', '7', '11', '17', '23', '31', '46', '63', '74', '75', '78', '79', '82', '85', '86', '91', '99',
                   '103', '108', '109', '110', '129', '130', '133', '137', '152', '153', '158', '159', '160', '162',
                   '164', '169', '172', '177', '178', '182', '190', '194', '200', '203', '210', '215', '231', '234',
                   '237', '238', '241', '243', '247', '255', '259', '261', '263', '267', '270', '272', '287', '292',
                   '301', '304', '305', '306', '309', '322', '323', '334', '335', '345', '349', '354', '356', '362',
                   '364', '365', '370', '373', '378', '380', '392', '395', '401', '403', '405', '414', '418', '420',
                   '430', '433'],
        'normal': [], 'malignant': []
    },
    'malignant': {
        'benign': [], 'normal': [],
        'malignant': ['4', '5', '7', '12', '17', '31', '34', '36', '45', '51', '56', '57', '66', '76', '77',
                      '80', '83', '89', '92', '93', '94', '96', '108', '109', '116', '123', '127', '140',
                      '143', '147', '157', '160', '161', '169', '171', '179', '181', '182', '192', '194',
                      '195', '199', '205']
    },
    'normal': {
        'benign': [],
        'normal': ['6', '8', '15', '16', '28', '32', '35', '42', '43', '51', '53', '68', '70', '77', '80', '96',
                   '97', '98', '99', '109', '113', '121', '131'], 'malignant': []
    }
}

keep_dic = {
    'all': {
        'benign': ['1', '2', '5', '6', '8', '9', '10', '12', '13', '14', '15', '16', '18', '19', '20', '21', '22', '24',
                   '26', '27', '28', '29', '30', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43',
                   '44', '45', '47', '48', '49', '50', '51', '52', '53', '55', '56', '57', '59', '60', '61', '62', '64',
                   '65', '66', '67', '68', '69', '70', '71', '72', '73', '76', '77', '80', '81', '84', '87', '88', '89',
                   '90', '94', '95', '96', '97', '101', '102', '104', '105', '106', '107', '111', '112', '113', '114',
                   '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128',
                   '131', '132', '134', '135', '136', '138', '139', '140', '141', '142', '143', '144', '145', '146',
                   '147', '148', '149', '150', '151', '154', '155', '156', '157', '161', '165', '166', '167', '168',
                   '170', '171', '174', '175', '176', '179', '180', '183', '184', '185', '186', '187', '188', '189',
                   '191', '192', '193', '196', '197', '198', '199', '201', '202', '204', '205', '206', '207', '208',
                   '209', '211', '212', '213', '214', '216', '217', '218', '219', '220', '221', '222', '223', '224',
                   '225', '226', '227', '228', '229', '230', '232', '233', '235', '236', '239', '240', '242', '244',
                   '245', '246', '248', '249', '250', '251', '252', '253', '254', '256', '257', '258', '260', '262',
                   '264', '265', '266', '268', '269', '271', '273', '274', '275', '276', '277', '278', '279', '280',
                   '281', '282', '283', '284', '285', '286', '288', '289', '290', '291', '293', '294', '295', '296',
                   '297', '298', '299', '300', '302', '303', '307', '308', '310', '311', '312', '313', '314', '316',
                   '317', '318', '319', '320', '321', '324', '325', '326', '327', '328', '329', '330', '331', '332',
                   '333', '336', '337', '338', '339', '340', '341', '342', '343', '344', '347', '348', '350', '351',
                   '352', '353', '355', '357', '358', '359', '360', '361', '363', '366', '367', '368', '369', '371',
                   '372', '374', '375', '376', '377', '379', '381', '382', '383', '384', '385', '386', '387', '388',
                   '389', '390', '391', '393', '394', '396', '397', '398', '399', '400', '402', '404', '406', '407',
                   '408', '409', '410', '411', '412', '413', '415', '416', '417', '419', '421', '422', '423', '425',
                   '426', '427', '428', '429', '431', '432', '434', '435', '436', '437'],
        'normal': ['1', '2', '3', '4', '5', '7', '9', '10', '11', '12', '13', '14', '17', '18', '19', '20', '21', '22',
                   '23', '24', '25', '26', '27', '29', '30', '31', '33', '34', '36', '37', '38', '39', '40', '41', '44',
                   '45', '46', '47', '48', '49', '50', '52', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63',
                   '64', '65', '66', '67', '69', '71', '72', '73', '74', '75', '76', '78', '79', '81', '82', '83', '84',
                   '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '100', '101', '102', '103', '104',
                   '105', '106', '107', '108', '110', '111', '112', '114', '115', '116', '117', '118', '119', '120',
                   '122', '123', '124', '125', '126', '127', '128', '129', '130', '132', '133'],
        'malignant': ['1', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '17', '18', '19', '20', '21',
                      '22', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '36', '40', '41', '42',
                      '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '54', '56', '58', '60', '61', '63',
                      '64', '65', '67', '68', '69', '70', '71', '72', '73', '74', '75', '77', '78', '79', '80', '81',
                      '82', '83', '84', '85', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98',
                      '99', '100', '102', '103', '104', '107', '110', '111', '112', '113', '114', '115', '116', '117',
                      '120', '121', '122', '123', '125', '126', '127', '129', '130', '132', '133', '134', '136', '138',
                      '139', '141', '142', '143', '145', '147', '148', '149', '150', '151', '152', '153', '154', '155',
                      '156', '157', '158', '162', '163', '164', '165', '167', '169', '170', '172', '173', '174', '175',
                      '176', '177', '178', '179', '180', '181', '182', '183', '184', '186', '189', '190', '191', '192',
                      '193', '194', '195', '196', '197', '198', '201', '202', '204', '205', '207', '208', '209',
                      '210']},
    'bad': {
        'benign': ['1', '2', '5', '6', '8', '9', '10', '12', '13', '14', '15', '16', '18', '19', '20', '21', '22', '24',
                   '26', '27', '28', '29', '30', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43',
                   '44', '45', '47', '48', '49', '50', '51', '52', '53', '55', '56', '57', '59', '60', '61', '62', '64',
                   '65', '66', '67', '68', '69', '70', '71', '72', '73', '76', '77', '80', '81', '84', '87', '88', '89',
                   '90', '94', '95', '96', '97', '101', '102', '104', '105', '106', '107', '111', '112', '113', '114',
                   '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128',
                   '131', '132', '134', '135', '136', '138', '139', '140', '141', '142', '143', '144', '145', '146',
                   '147', '148', '149', '150', '151', '154', '155', '156', '157', '161', '165', '166', '167', '168',
                   '170', '171', '174', '175', '176', '179', '180', '183', '184', '185', '186', '187', '188', '189',
                   '191', '192', '193', '196', '197', '198', '199', '201', '202', '204', '205', '206', '207', '208',
                   '209', '211', '212', '213', '214', '216', '217', '218', '219', '220', '221', '222', '223', '224',
                   '225', '226', '227', '228', '229', '230', '232', '233', '235', '236', '239', '240', '242', '244',
                   '245', '246', '248', '249', '250', '251', '252', '253', '254', '256', '257', '258', '260', '262',
                   '264', '265', '266', '268', '269', '271', '273', '274', '275', '276', '277', '278', '279', '280',
                   '281', '282', '283', '284', '285', '286', '288', '289', '290', '291', '293', '294', '295', '296',
                   '297', '298', '299', '300', '302', '303', '307', '308', '310', '311', '312', '313', '314', '316',
                   '317', '318', '319', '320', '321', '324', '325', '326', '327', '328', '329', '330', '331', '332',
                   '333', '336', '337', '338', '339', '340', '341', '342', '343', '344', '347', '348', '350', '351',
                   '352', '353', '355', '357', '358', '359', '360', '361', '363', '366', '367', '368', '369', '371',
                   '372', '374', '375', '376', '377', '379', '381', '382', '383', '384', '385', '386', '387', '388',
                   '389', '390', '391', '393', '394', '396', '397', '398', '399', '400', '402', '404', '406', '407',
                   '408', '409', '410', '411', '412', '413', '415', '416', '417', '419', '421', '422', '423', '425',
                   '426', '427', '428', '429', '431', '432', '434', '435', '436', '437'], 'normal': [],
        'malignant': ['1', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '17', '18', '19', '20', '21',
                      '22', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '36', '40', '41', '42',
                      '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '54', '56', '58', '60', '61', '63',
                      '64', '65', '67', '68', '69', '70', '71', '72', '73', '74', '75', '77', '78', '79', '80', '81',
                      '82', '83', '84', '85', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98',
                      '99', '100', '102', '103', '104', '107', '110', '111', '112', '113', '114', '115', '116', '117',
                      '120', '121', '122', '123', '125', '126', '127', '129', '130', '132', '133', '134', '136', '138',
                      '139', '141', '142', '143', '145', '147', '148', '149', '150', '151', '152', '153', '154', '155',
                      '156', '157', '158', '162', '163', '164', '165', '167', '169', '170', '172', '173', '174', '175',
                      '176', '177', '178', '179', '180', '181', '182', '183', '184', '186', '189', '190', '191', '192',
                      '193', '194', '195', '196', '197', '198', '201', '202', '204', '205', '207', '208', '209',
                      '210']},
    'benign': {
        'benign': ['1', '2', '5', '6', '8', '9', '10', '12', '13', '14', '15', '16', '18', '19', '20', '21', '22', '24',
                   '26', '27', '28', '29', '30', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43',
                   '44', '45', '47', '48', '49', '50', '51', '52', '53', '55', '56', '57', '59', '60', '61', '62', '64',
                   '65', '66', '67', '68', '69', '70', '71', '72', '73', '76', '77', '80', '81', '84', '87', '88', '89',
                   '90', '94', '95', '96', '97', '101', '102', '104', '105', '106', '107', '111', '112', '113', '114',
                   '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128',
                   '131', '132', '134', '135', '136', '138', '139', '140', '141', '142', '143', '144', '145', '146',
                   '147', '148', '149', '150', '151', '154', '155', '156', '157', '161', '165', '166', '167', '168',
                   '170', '171', '174', '175', '176', '179', '180', '183', '184', '185', '186', '187', '188', '189',
                   '191', '192', '193', '196', '197', '198', '199', '201', '202', '204', '205', '206', '207', '208',
                   '209', '211', '212', '213', '214', '216', '217', '218', '219', '220', '221', '222', '223', '224',
                   '225', '226', '227', '228', '229', '230', '232', '233', '235', '236', '239', '240', '242', '244',
                   '245', '246', '248', '249', '250', '251', '252', '253', '254', '256', '257', '258', '260', '262',
                   '264', '265', '266', '268', '269', '271', '273', '274', '275', '276', '277', '278', '279', '280',
                   '281', '282', '283', '284', '285', '286', '288', '289', '290', '291', '293', '294', '295', '296',
                   '297', '298', '299', '300', '302', '303', '307', '308', '310', '311', '312', '313', '314', '316',
                   '317', '318', '319', '320', '321', '324', '325', '326', '327', '328', '329', '330', '331', '332',
                   '333', '336', '337', '338', '339', '340', '341', '342', '343', '344', '347', '348', '350', '351',
                   '352', '353', '355', '357', '358', '359', '360', '361', '363', '366', '367', '368', '369', '371',
                   '372', '374', '375', '376', '377', '379', '381', '382', '383', '384', '385', '386', '387', '388',
                   '389', '390', '391', '393', '394', '396', '397', '398', '399', '400', '402', '404', '406', '407',
                   '408', '409', '410', '411', '412', '413', '415', '416', '417', '419', '421', '422', '423', '425',
                   '426', '427', '428', '429', '431', '432', '434', '435', '436', '437'], 'normal': [],
        'malignant': []},
    'malignant': {'benign': [], 'normal': [],
                  'malignant': ['1', '2', '3', '6', '8', '9', '10', '11', '13', '14', '15', '16', '18', '19', '20',
                                '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '32', '33', '35', '37',
                                '38', '39', '40', '41', '42', '43', '44', '46', '47', '48', '49', '50', '52', '54',
                                '55', '58', '59', '60', '61', '62', '63', '64', '65', '67', '68', '69', '70', '71',
                                '72', '73', '74', '75', '78', '79', '81', '82', '84', '85', '86', '87', '88', '90',
                                '91', '95', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107',
                                '110', '111', '112', '113', '114', '115', '117', '118', '119', '120', '121', '122',
                                '124', '125', '126', '128', '129', '130', '131', '132', '133', '134', '135', '136',
                                '137', '138', '139', '141', '142', '144', '145', '146', '148', '149', '150', '151',
                                '152', '153', '154', '155', '156', '158', '159', '162', '163', '164', '165', '166',
                                '167', '168', '170', '172', '173', '174', '175', '176', '177', '178', '180', '183',
                                '184', '185', '186', '187', '188', '189', '190', '191', '193', '196', '197', '198',
                                '200', '201', '202', '203', '204', '206', '207', '208', '209', '210']},
    'normal': {
        'benign': [], 'normal': [], 'malignant': []
    }
}


def get_num(file):
    r = "(\w+) ?\((\d+)\)"
    result = re.match(r, file)
    if result is None:
        return None
    return result.group(2)


def generate_images(input_path, output_path):
    # Load the dataset
    all_output_folders = ['all', 'bad', 'benign', 'malignant', 'normal']

    for output_folder in all_output_folders:
        temp_split_dic = split_dic[output_folder]
        temp_keep_dic = keep_dic[output_folder]
        for folder in ['benign', 'normal', 'malignant']:
            print(f'Processing {folder} images')
            input_folder = os.path.join(input_path, folder)
            output_folder_path = os.path.join(output_path, f"BUSI_{output_folder}")
            output_folder_path_train = os.path.join(output_folder_path, 'train')
            output_folder_path_train_images = os.path.join(output_folder_path_train, 'images')
            output_folder_path_train_masks = os.path.join(output_folder_path_train, 'masks')
            output_folder_path_val = os.path.join(output_folder_path, 'val')
            output_folder_path_val_images = os.path.join(output_folder_path_val, 'images')
            output_folder_path_val_masks = os.path.join(output_folder_path_val, 'masks')
            os.makedirs(output_folder_path_train_images, exist_ok=True)
            os.makedirs(output_folder_path_train_masks, exist_ok=True)
            os.makedirs(output_folder_path_val_images, exist_ok=True)
            os.makedirs(output_folder_path_val_masks, exist_ok=True)

            all_output_folders = [
                output_folder_path_train_images,
                output_folder_path_val_images,
                output_folder_path_train_masks,
                output_folder_path_val_masks
            ]

            for file in os.listdir(input_folder):
                if not file.endswith('.png'):
                    continue
                if "_" in file:
                    real_name = file.split("_")[0] + ".png"
                else:
                    real_name = file
                num = get_num(real_name)
                if num is None:
                    continue
                is_train = num in temp_keep_dic[folder]
                is_val = num in temp_split_dic[folder]

                if not is_train and not is_val:
                    continue

                index = 0 if is_train else 1

                if "_" in file:
                    index += 2

                target_folder = all_output_folders[index]
                shutil.copy(os.path.join(input_folder, file), os.path.join(target_folder, real_name))


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("--input_path", type=str, default=None, help="input path")
    parser.add_argument("--output_path", type=str, default=None, help="output path")
    args = parser.parse_args()
    generate_images(args.input_path, args.output_path)
